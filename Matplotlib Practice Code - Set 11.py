# -*- coding: utf-8 -*-
"""Untitled99.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/167D1d8u3K8wBcFJKznblhwG2NI3dhFXx
"""

!pip3 install PyQt5

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d
fig = plt.figure()
ax = plt.axes(projection='3d')
plt.show()

fig = plt.figure()
ax = plt.axes(projection='3d')
z = np.linspace(0, 30, 1000)
x = np.sin(z)
y = np.cos(z)
ax.plot3D(x, y, z, 'red')
plt.show()

fig = plt.figure()
ax = plt.axes(projection='3d')
y = np.random.random(100)
x = np.random.random(100)
z = np.random.random(100)
ax.scatter3D(x, y, z, cmap='cool');
plt.show()

fig = plt.figure()
ax = plt.axes(projection='3d')
x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax.contour(X, Y, Z, 50, cmap='coolwarm')
plt.show()

fig = plt.figure()
x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax = plt.axes(projection='3d')
ax.contour3D(X, Y, Z, 40, cmap='coolwarm')
plt.show()

x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax = fig.add_subplot(projection='3d')
ax.contourf(X, Y, Z, 50, cmap='coolwarm')
plt.show()

x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax = plt.axes(projection='3d')
ax.plot_wireframe(X, Y, Z, color='Green')
ax.set_title('wireframe')
plt.show()

x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax = plt.axes(projection='3d')
ax.plot_surface(X, Y, Z, color='Blue')
ax.set_title('Surface Plot')
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
ax = plt.axes(projection='3d')
x = np.linspace(-10, 10, 30)
y = np.linspace(-10, 10, 30)
X, Y = np.meshgrid(x, y)
Z = np.sin(np.sqrt(X ** 2 + Y ** 2))
fig = plt.figure()
ax = fig.add_subplot(projection='3d')
X, Y, Z = axes3d.get_test_data(0.02)
ax.plot_wireframe(X, Y, Z,rstride=10,cstride=10)
plt.show()