# -*- coding: utf-8 -*-
"""Untitled35.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_sxW4is-2e9FFD8ufvRuMElfQFS3V8Dj
"""

from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
from sklearn.naive_bayes import MultinomialNB, GaussianNB,BernoulliNB
from sklearn import metrics

X,y = load_iris(return_X_y=True)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=0)

GNBclf = GaussianNB()
GNBclf.fit(X,y)
prediction = GNBclf.predict(X_test)

print("Prediction :- \n",prediction)

print("\nAccuracy score :-\n",metrics.accuracy_score(y_test,prediction,normalize=True))

print("\nClassification report :-",metrics.classification_report(y_test,prediction))

print("\nConfusion Matrix :-\n",metrics.confusion_matrix(y_test,prediction))

MNBclf = MultinomialNB()
MNBclf.fit(X,y)
prediction = MNBclf.predict(X_test)
print("Prediction :- \n",prediction)

print("\nAccuracy score :- \n",metrics.accuracy_score(y_test,prediction,normalize=True))

print("\nClassification report :- \n",metrics.classification_report(y_test,prediction))

print("\nConfusion Matrix :- \n",metrics.confusion_matrix(y_test,prediction))

from sklearn.naive_bayes import BernoulliNB

Bnclf = BernoulliNB()
Bnclf.fit(X,y)
prediction = Bnclf.predict(X_test)
print("Prediction :- \n",prediction)

print("\nAccuracy score :- \n",metrics.accuracy_score(y_test,prediction,normalize=True))

print("\nClassification report :- \n",metrics.classification_report(y_test,prediction))

print("\Confusion Matrix :- \n",metrics.confusion_matrix(y_test,prediction))

