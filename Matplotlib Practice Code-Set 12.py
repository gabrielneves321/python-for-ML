# -*- coding: utf-8 -*-
"""Untitled100.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186FQMd5cW0Disax_2Oic3qr3_4S7uVrX
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d
fig = plt.figure()
ax = fig.add_subplot(projection='3d')
colors = ['r', 'g', 'b', 'c', 'm', 'y','k']
yticks = [0, 1, 2, 3, 4, 5, 6]
for c, k in zip(colors, yticks):
    x = np.arange(25)
    y = np.random.rand(25)
    ax.bar(x, y, zs=k, zdir='y',color=c, alpha=0.8)
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d
fig = plt.figure()
ax = fig.add_subplot(projection='3d')
x = np.arange(10) * np.arange(10)
y = np.arange(10) * np.arange(10)
x, y = np.meshgrid(x, y)
x, y = x.ravel(), y.ravel()
top = x + y
bottom = np.zeros_like(top)
width = depth = 5
ax.bar3d(x, y, bottom, width,depth, top,shade=True,color='g')
plt.show()

fig = plt.figure()
ax = fig.add_subplot(projection='3d')
x = y = z = np.arange(-0.1, 1, 0.2)
X, Y, Z = np.meshgrid(x, y, z)
u = np.cos(np.pi * X) * np.sin(np.pi * Y) * np.sin(np.pi * Z)
v = -np.sin(np.pi * X) * np.cos(np.pi * Y) * np.sin(np.pi * Z)
w = np.sin(np.pi * X) * np.sin(np.pi * Y) * np.cos(np.pi * Z)
ax.quiver(X, Y, Z, u, v, w,length=0.1,normalize=True)
plt.show()

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits import mplot3d
from mpl_toolkits.mplot3d import Axes3D
from numpy import linspace, sin, cos
from pylab import figure, show
x = linspace(-10,10,100);
y = sin(x);
z = cos(x);
fig = figure()
ax = Axes3D(fig)
# plotting the stems
for i in range(len(x)):
    ax.plot([x[i], x[i]], [y[i], y[i]], [0, z[i]],
      '--', linewidth=2, color='b', alpha=.5)
    ax.plot(x, y, z, 'o', markersize=8,
      markerfacecolor='none', color='b',label='ib')
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_zlabel('z')
show()

fig = plt.figure()
ax = fig.add_subplot(projection='3d')
u = np.linspace(0, 2 * np.pi, 100)
v = np.linspace(0, np.pi, 100)
x = 10 * np.outer(np.cos(u), np.sin(v))
y = 10 * np.outer(np.sin(u), np.sin(v))
z = 10 * np.outer(np.ones(np.size(u)), np.cos(v))
ax.plot_surface(x, y, z)
plt.show()

ma = np.random.randint(1, 3, size=(3, 3, 3))
fig = plt.figure()
ax = plt.axes(projection='3d')
ax.voxels(ma, edgecolor='k')
plt.show()