# -*- coding: utf-8 -*-
"""Untitled101.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vG48xBoGGLOcEsImXUbsaZIwyOUivTNk
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
# %matplotlib inline
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation
fig = plt.figure()
ax = plt.axes(xlim=(0, 4), ylim=(-2, 2))
line, = ax.plot([], [], lw=3)
def init():
    line.set_data([], [])
    return line,
def animate(i):
    x = np.linspace(0, 4, 1000)
    y = np.sin(2 * np.pi * (x - 0.01 * i))
    line.set_data(x, y)
    return line,
anim = FuncAnimation(fig, animate,init_func=init,
frames=1000,
interval=10,
blit=True)
anim.save('sine_wave.gif', writer='pillow')

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
# %matplotlib inline
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation
fig = plt.figure()
ax = plt.axes(xlim=(-50, 50), ylim=(-50, 50))
line, = ax.plot([], [], lw=2)
def init():
  line.set_data([], [])
  return line,
xdata, ydata = [], []
def animate(i):
  t = 0.2*i
  x = t*np.cos(t)
  y = t*np.sin(t)
  xdata.append(x)
  ydata.append(y)
  line.set_data(xdata, ydata)
  return line,
anim = FuncAnimation(fig, animate,init_func=init,
frames=3000,
interval=5,
blit=True)
anim.save('spiral.gif', writer='pillow')

!pip3 install celluloid

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib qt
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation
import celluloid
from celluloid import Camera
from IPython.display import HTML
fig = plt.figure()
camera = Camera(fig)
for i in range(10):
    plt.plot([i] * 10)
    camera.snap()
animation = camera.animate()
HTML(animation.to_jshtml())

from matplotlib.animation import FuncAnimation
import celluloid
from celluloid import Camera
from IPython.display import HTML
fig, axes = plt.subplots()
camera = Camera(fig)
t = np.linspace(0, 2 * np.pi, 128, endpoint=False)
for i in t:
  plt.plot(t, np.sin(t + i), color='green')
  camera.snap()
animation = camera.animate()
HTML(animation.to_jshtml())

fig, axes = plt.subplots()
camera = Camera(fig)
y = np.arange(5)
for i in y:
  plt.bar( np.random.rand(5)*10 , y)
  camera.snap()
animation = camera.animate()
HTML(animation.to_jshtml())

